{"ast":null,"code":"var _jsxFileName = \"E:\\\\PracWebDev\\\\FinalProject\\\\frontend\\\\FinalProject-FrontEnd\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditStudentView from '../views/EditStudentView';\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let editStudent = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        gpa: this.state.gpa,\n        campusId: this.state.campusId,\n        id: window.location.pathname.slice(-1)\n      };\n      await this.props.editStudent(editStudent);\n      this.setState({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: 0,\n        campusId: null,\n        redirect: true,\n        redirectId: window.location.pathname.slice(-1)\n      });\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      gpa: 0,\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStudent(window.location.pathname.slice(-1));\n    this.setState({\n      firstname: this.props.student.firstname,\n      lastname: this.props.student.lastname,\n      email: this.props.student.email,\n      gpa: this.props.student.gpa,\n      campusId: this.props.student.campusId,\n      redirect: false,\n      redirectId: null,\n      id: this.props.student.id\n    });\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(EditStudentView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      student: this.props.student,\n      editStudent: this.props.editStudent,\n      fetchStudent: this.props.fetchStudent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    editStudent: student => dispatch(editStudentThunk(student)),\n    fetchStudent: student => dispatch(fetchStudentThunk(student))\n  };\n};\n\nexport default connect(mapState, mapDispatch)(EditStudentContainer);","map":{"version":3,"sources":["E:/PracWebDev/FinalProject/frontend/FinalProject-FrontEnd/src/components/containers/EditStudentContainer.js"],"names":["Component","connect","Redirect","EditStudentView","editStudentThunk","fetchStudentThunk","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","editStudent","firstname","state","lastname","email","gpa","campusId","id","window","location","pathname","slice","redirect","redirectId","componentDidMount","fetchStudent","student","componentWillUnmount","render","mapState","mapDispatch","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditStudentView from '../views/EditStudentView';\r\nimport { editStudentThunk, fetchStudentThunk } from '../../store/thunks';\r\n\r\n\r\nclass EditStudentContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          firstname: \"\", \r\n          lastname: \"\",\r\n          email: \"\",\r\n          gpa: 0, \r\n          campusId: null, \r\n          redirect: false, \r\n          redirectId: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.fetchStudent(window.location.pathname.slice(-1));\r\n\r\n      this.setState({\r\n        firstname: this.props.student.firstname,\r\n        lastname: this.props.student.lastname,\r\n        email: this.props.student.email,\r\n        gpa: this.props.student.gpa,\r\n        campusId: this.props.student.campusId,\r\n        redirect: false, \r\n        redirectId: null,\r\n        id: this.props.student.id\r\n      })\r\n    }\r\n\r\n    handleChange = event => {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      });\r\n    }\r\n\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        let editStudent = {\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            email: this.state.email,\r\n            gpa: this.state.gpa,\r\n            campusId: this.state.campusId,\r\n            id: window.location.pathname.slice(-1)\r\n        };\r\n        \r\n        await this.props.editStudent(editStudent);\r\n\r\n        this.setState({\r\n          firstname: \"\", \r\n          lastname: \"\", \r\n          email: \"\",\r\n          gpa: 0,\r\n          campusId: null, \r\n          redirect: true, \r\n          redirectId: window.location.pathname.slice(-1)\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({redirect: false, redirectId: null});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n          return (<Redirect to={`/student/${this.state.redirectId}`}/>)\r\n        }\r\n        return (\r\n          <EditStudentView \r\n            handleChange = {this.handleChange} \r\n            handleSubmit = {this.handleSubmit}\r\n            student = {this.props.student}\r\n            editStudent = {this.props.editStudent}  \r\n            fetchStudent = {this.props.fetchStudent}      \r\n          />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    student: state.student,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        editStudent: (student) => dispatch(editStudentThunk(student)),\r\n        fetchStudent: (student) => dispatch(fetchStudentThunk(student)),\r\n    })\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(EditStudentContainer);"]},"metadata":{},"sourceType":"module"}