{"ast":null,"code":"import * as ac from './actions/actionCreators';\n\nconst axios = require('axios'); // THUNKS\n//All authors\n\n\nexport const fetchAllAuthorsThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`/api/authors`);\n    dispatch(ac.fetchAllAuthors(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single author\n\nexport const fetchAuthorThunk = id => async dispatch => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`/api/authors/${id}`)\n  //   .then((res) => res.data)\n  //   .then((author) => dispatch(ac.fetchAuthor(author)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`/api/authors/${id}`);\n    dispatch(ac.fetchAuthor(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //All books\n\nexport const fetchAllBooksThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`/api/books`);\n    dispatch(ac.fetchAllBooks(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addAuthorThunk = author => async dispatch => {\n  try {\n    let res = await axios.post(`/api/authors`, author);\n    dispatch(ac.addAuthor(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteAuthorThunk = AuthorId => async dispatch => {\n  try {\n    await axios.delete(`/api/authors/${AuthorId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteAuthor(AuthorId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editAuthorThunk = author => async dispatch => {\n  try {\n    let updatedAuthor = await axios.put(`/api/authors/${author.id}`, author);\n    dispatch(ac.editAuthor(updatedAuthor));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addBookThunk = book => async dispatch => {\n  try {\n    let res = await axios.post(`/api/books`, book);\n    dispatch(ac.addBook(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteBookThunk = bookId => async dispatch => {\n  try {\n    await axios.delete(`/api/books/${bookId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteBook(bookId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editBookThunk = book => async dispatch => {\n  try {\n    let updatedBook = await axios.put(`/api/books/${book.id}`, book);\n    dispatch(ac.editBook(updatedBook));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single book\n\nexport const fetchBookThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`/api/books/${id}`);\n    dispatch(ac.fetchBook(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["E:/PracWebDev/FinalProject/frontend/FinalProject-FrontEnd/src/store/thunks.js"],"names":["ac","axios","require","fetchAllAuthorsThunk","dispatch","res","get","fetchAllAuthors","data","err","console","error","fetchAuthorThunk","id","fetchAuthor","fetchAllBooksThunk","fetchAllBooks","addAuthorThunk","author","post","addAuthor","deleteAuthorThunk","AuthorId","delete","deleteAuthor","editAuthorThunk","updatedAuthor","put","editAuthor","addBookThunk","book","addBook","deleteBookThunk","bookId","deleteBook","editBookThunk","updatedBook","editBook","fetchBookThunk","fetchBook"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,0BAApB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AAEA;;;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,cAAX,CAAhB;AACAF,IAAAA,QAAQ,CAACJ,EAAE,CAACO,eAAH,CAAmBF,GAAG,CAACG,IAAvB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAMG,gBAAgB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,gBAAeO,EAAG,EAA7B,CAAhB;AACAT,IAAAA,QAAQ,CAACJ,EAAE,CAACc,WAAH,CAAeT,GAAG,CAACG,IAAnB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMM,kBAAkB,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAC1D,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,YAAX,CAAhB;AACAF,IAAAA,QAAQ,CAACJ,EAAE,CAACgB,aAAH,CAAiBX,GAAG,CAACG,IAArB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMQ,cAAc,GAAIC,MAAD,IAAY,MAAOd,QAAP,IAAoB;AAC5D,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACkB,IAAN,CAAY,cAAZ,EAA2BD,MAA3B,CAAhB;AACAd,IAAAA,QAAQ,CAACJ,EAAE,CAACoB,SAAH,CAAaf,GAAG,CAACG,IAAjB,CAAD,CAAR;AACA,WAAOH,GAAG,CAACG,IAAX;AACD,GAJD,CAIE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAMY,iBAAiB,GAAGC,QAAQ,IAAI,MAAMlB,QAAN,IAAkB;AAC7D,MAAI;AACF,UAAMH,KAAK,CAACsB,MAAN,CAAc,gBAAeD,QAAS,EAAtC,CAAN,CADE,CAEF;;AACAlB,IAAAA,QAAQ,CAACJ,EAAE,CAACwB,YAAH,CAAgBF,QAAhB,CAAD,CAAR;AACD,GAJD,CAIE,OAAMb,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAMgB,eAAe,GAAGP,MAAM,IAAI,MAAMd,QAAN,IAAkB;AACzD,MAAI;AACF,QAAIsB,aAAa,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,gBAAeT,MAAM,CAACL,EAAG,EAApC,EAAuCK,MAAvC,CAA1B;AACAd,IAAAA,QAAQ,CAACJ,EAAE,CAAC4B,UAAH,CAAcF,aAAd,CAAD,CAAR;AACD,GAHD,CAGE,OAAMjB,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMoB,YAAY,GAAIC,IAAD,IAAU,MAAO1B,QAAP,IAAoB;AACxD,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACkB,IAAN,CAAY,YAAZ,EAAyBW,IAAzB,CAAhB;AACA1B,IAAAA,QAAQ,CAACJ,EAAE,CAAC+B,OAAH,CAAW1B,GAAG,CAACG,IAAf,CAAD,CAAR;AACA,WAAOH,GAAG,CAACG,IAAX;AACD,GAJD,CAIE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAMuB,eAAe,GAAGC,MAAM,IAAI,MAAM7B,QAAN,IAAkB;AACzD,MAAI;AACF,UAAMH,KAAK,CAACsB,MAAN,CAAc,cAAaU,MAAO,EAAlC,CAAN,CADE,CAEF;;AACA7B,IAAAA,QAAQ,CAACJ,EAAE,CAACkC,UAAH,CAAcD,MAAd,CAAD,CAAR;AACD,GAJD,CAIE,OAAMxB,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAM0B,aAAa,GAAGL,IAAI,IAAI,MAAM1B,QAAN,IAAkB;AACrD,MAAI;AACF,QAAIgC,WAAW,GAAG,MAAMnC,KAAK,CAAC0B,GAAN,CAAW,cAAaG,IAAI,CAACjB,EAAG,EAAhC,EAAmCiB,IAAnC,CAAxB;AACA1B,IAAAA,QAAQ,CAACJ,EAAE,CAACqC,QAAH,CAAYD,WAAZ,CAAD,CAAR;AACD,GAHD,CAGE,OAAM3B,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAM6B,cAAc,GAAGzB,EAAE,IAAI,MAAMT,QAAN,IAAkB;AACpD,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,cAAaO,EAAG,EAA3B,CAAhB;AACAT,IAAAA,QAAQ,CAACJ,EAAE,CAACuC,SAAH,CAAalC,GAAG,CAACG,IAAjB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM","sourcesContent":["import * as ac from './actions/actionCreators';\r\nconst axios = require('axios');\r\n\r\n// THUNKS\r\n\r\n//All authors\r\nexport const fetchAllAuthorsThunk = () => async (dispatch) => {\r\n  try {\r\n    let res = await axios.get(`/api/authors`);\r\n    dispatch(ac.fetchAllAuthors(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//Single author\r\nexport const fetchAuthorThunk = (id) => async (dispatch) => {\r\n  // thunk creator would not an be async function \r\n  // if using Promise.then:\r\n  // return axios\r\n  //   .get(`/api/authors/${id}`)\r\n  //   .then((res) => res.data)\r\n  //   .then((author) => dispatch(ac.fetchAuthor(author)))\r\n  //   .catch((err) => console.log(err));\r\n  try {\r\n    let res = await axios.get(`/api/authors/${id}`);\r\n    dispatch(ac.fetchAuthor(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//All books\r\nexport const fetchAllBooksThunk = () => async (dispatch) => {\r\n  try {\r\n    let res = await axios.get(`/api/books`);\r\n    dispatch(ac.fetchAllBooks(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const addAuthorThunk = (author) => async (dispatch) => {\r\n  try {\r\n    let res = await axios.post(`/api/authors`, author);\r\n    dispatch(ac.addAuthor(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const deleteAuthorThunk = AuthorId => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/authors/${AuthorId}`);\r\n    //delete succesful so change state with dispatch\r\n    dispatch(ac.deleteAuthor(AuthorId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const editAuthorThunk = author => async dispatch => {\r\n  try {\r\n    let updatedAuthor = await axios.put(`/api/authors/${author.id}`, author);\r\n    dispatch(ac.editAuthor(updatedAuthor));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const addBookThunk = (book) => async (dispatch) => {\r\n  try {\r\n    let res = await axios.post(`/api/books`, book);\r\n    dispatch(ac.addBook(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const deleteBookThunk = bookId => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/books/${bookId}`);\r\n    //delete succesful so change state with dispatch\r\n    dispatch(ac.deleteBook(bookId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const editBookThunk = book => async dispatch => {\r\n  try {\r\n    let updatedBook = await axios.put(`/api/books/${book.id}`, book);\r\n    dispatch(ac.editBook(updatedBook));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//Single book\r\nexport const fetchBookThunk = id => async dispatch => {\r\n  try {\r\n    let res = await axios.get(`/api/books/${id}`);\r\n    dispatch(ac.fetchBook(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}