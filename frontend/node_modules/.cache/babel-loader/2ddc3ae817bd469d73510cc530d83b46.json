{"ast":null,"code":"var _jsxFileName = \"E:\\\\PracWebDev\\\\FinalProject\\\\frontend\\\\FinalProject-FrontEnd\\\\src\\\\components\\\\containers\\\\AllBooksContainer.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchAllBooksThunk, deleteBookThunk } from \"../../store/thunks\";\nimport AllBooksView from \"../views/AllBooksView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllBooksContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAllBooks();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AllBooksView, {\n        books: this.props.allBooks,\n        deleteBook: this.props.deleteBook,\n        deleteBooks: this.props.deleteBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Map state to props;\n\n\nconst mapState = state => {\n  return {\n    allBooks: state.allBooks\n  };\n}; // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllBooks: () => dispatch(fetchAllBooksThunk()),\n    deleteBook: id => dispatch(deleteBookThunk(id)),\n    deleteBooks: books => books.map(book => dispatch(deleteBookThunk(book.id)))\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispatch)(AllBooksContainer));","map":{"version":3,"sources":["E:/PracWebDev/FinalProject/frontend/FinalProject-FrontEnd/src/components/containers/AllBooksContainer.js"],"names":["Component","connect","withRouter","fetchAllBooksThunk","deleteBookThunk","AllBooksView","AllBooksContainer","componentDidMount","props","fetchAllBooks","render","allBooks","deleteBook","deleteBooks","mapState","state","mapDispatch","dispatch","id","books","map","book"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,oBAApD;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;;;AAEA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AACxCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,QADpB;AAEE,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWI,UAFzB;AAGE,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK;AAH1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAfuC,C,CAkB1C;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLJ,IAAAA,QAAQ,EAAEI,KAAK,CAACJ;AADX,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMK,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLR,IAAAA,aAAa,EAAE,MAAMQ,QAAQ,CAACd,kBAAkB,EAAnB,CADxB;AAELS,IAAAA,UAAU,EAAGM,EAAD,IAAQD,QAAQ,CAACb,eAAe,CAACc,EAAD,CAAhB,CAFvB;AAGLL,IAAAA,WAAW,EAAGM,KAAD,IACXA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAUJ,QAAQ,CAACb,eAAe,CAACiB,IAAI,CAACH,EAAN,CAAhB,CAA5B;AAJG,GAAP;AAMD,CAPD;;AASA,eAAehB,UAAU,CAACD,OAAO,CAACa,QAAD,EAAWE,WAAX,CAAP,CAA+BV,iBAA/B,CAAD,CAAzB","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { fetchAllBooksThunk, deleteBookThunk } from \"../../store/thunks\";\r\n\r\nimport AllBooksView from \"../views/AllBooksView\";\r\n\r\nclass AllBooksContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllBooks();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AllBooksView\r\n          books={this.props.allBooks}\r\n          deleteBook={this.props.deleteBook}\r\n          deleteBooks={this.props.deleteBooks}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Map state to props;\r\nconst mapState = (state) => {\r\n  return {\r\n    allBooks: state.allBooks,\r\n  };\r\n};\r\n\r\n// Map dispatch to props;\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchAllBooks: () => dispatch(fetchAllBooksThunk()),\r\n    deleteBook: (id) => dispatch(deleteBookThunk(id)),\r\n    deleteBooks: (books) =>\r\n      books.map((book) => dispatch(deleteBookThunk(book.id))),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapState, mapDispatch)(AllBooksContainer));\r\n"]},"metadata":{},"sourceType":"module"}