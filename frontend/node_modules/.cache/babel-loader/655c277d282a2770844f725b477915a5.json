{"ast":null,"code":"// Necessities and accessories for constructing our Redux store;\nimport { combineReducers, applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk'; //import { composeWithDevTools } from 'redux-devtools-extension';\n// import all reducers from barrel file\n\nimport * as reducers from './reducers'; // Construct our Redux store;\n\nconst rootReducer = combineReducers(reducers);\nconst logger = createLogger({\n  collapsed: true\n}); //const middleware = composeWithDevTools(applyMiddleware(thunkMiddleware, logger));\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger)); // Export our store by default, which will be provided to and injected within our entire application;\n\nexport default store;","map":{"version":3,"sources":["E:/PracWebDev/FinalProject/frontend/FinalProject-FrontEnd/src/store/index.js"],"names":["combineReducers","applyMiddleware","createStore","createLogger","thunk","reducers","rootReducer","logger","collapsed","store"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AAEA;;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B,C,CAEA;;AACA,MAAMC,WAAW,GAAGN,eAAe,CAACK,QAAD,CAAnC;AACA,MAAME,MAAM,GAAGJ,YAAY,CAAC;AAAEK,EAAAA,SAAS,EAAE;AAAb,CAAD,CAA3B,C,CACA;;AACA,MAAMC,KAAK,GAAGP,WAAW,CAACI,WAAD,EAAcL,eAAe,CAACG,KAAD,EAAQG,MAAR,CAA7B,CAAzB,C,CAEA;;AACA,eAAeE,KAAf","sourcesContent":["// Necessities and accessories for constructing our Redux store;\r\nimport { combineReducers, applyMiddleware, createStore } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// import all reducers from barrel file\r\nimport * as reducers from './reducers';\r\n\r\n// Construct our Redux store;\r\nconst rootReducer = combineReducers(reducers);\r\nconst logger = createLogger({ collapsed: true });\r\n//const middleware = composeWithDevTools(applyMiddleware(thunkMiddleware, logger));\r\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n\r\n// Export our store by default, which will be provided to and injected within our entire application;\r\nexport default store;"]},"metadata":{},"sourceType":"module"}