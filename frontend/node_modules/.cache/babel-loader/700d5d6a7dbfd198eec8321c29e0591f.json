{"ast":null,"code":"var _jsxFileName = \"E:\\\\PracWebDev\\\\FinalProject\\\\frontend\\\\FinalProject-FrontEnd\\\\src\\\\components\\\\containers\\\\AllStudentsContainer.js\";\n// const AllStudentsContainer = () => {\n//   return (\n//     <h1>All Students View</h1>\n//   );\n// };\n// export default AllStudentsContainer;\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchAllStudentsThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport AllStudentsView from \"../views/AllStudentsView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllStudentsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchAllStudents();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AllStudentsView, {\n        students: this.props.allStudents,\n        deleteStudent: this.props.deleteStudent,\n        deleteStudents: this.props.deleteStudents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Map state to props;\n\n\nconst mapState = state => {\n  return {\n    allStudents: state.allStudents\n  };\n}; // Map dispatch to props;\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: id => dispatch(deleteStudentThunk(id)),\n    deleteStudents: students => students.map(student => dispatch(deleteStudentThunk(student.id)))\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));","map":{"version":3,"sources":["E:/PracWebDev/FinalProject/frontend/FinalProject-FrontEnd/src/components/containers/AllStudentsContainer.js"],"names":["Component","connect","withRouter","fetchAllStudentsThunk","deleteStudentThunk","AllStudentsView","AllStudentsContainer","componentDidMount","props","fetchAllStudents","render","allStudents","deleteStudent","deleteStudents","mapState","state","mapDispatch","dispatch","id","students","map","student"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,oBAA1D;AAEA,OAAOC,eAAP,MAA4B,0BAA5B;;;AAEA,MAAMC,oBAAN,SAAmCN,SAAnC,CAA6C;AAC3CO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,gBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,eAAD;AACE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,WADvB;AAEE,QAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI,aAF5B;AAGE,QAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWK;AAH7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAf0C,C,CAkB7C;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACLJ,IAAAA,WAAW,EAAEI,KAAK,CAACJ;AADd,GAAP;AAGD,CAJD,C,CAMA;;;AACA,MAAMK,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLR,IAAAA,gBAAgB,EAAE,MAAMQ,QAAQ,CAACd,qBAAqB,EAAtB,CAD3B;AAELS,IAAAA,aAAa,EAAGM,EAAD,IAAQD,QAAQ,CAACb,kBAAkB,CAACc,EAAD,CAAnB,CAF1B;AAGLL,IAAAA,cAAc,EAAGM,QAAD,IACdA,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAaJ,QAAQ,CAACb,kBAAkB,CAACiB,OAAO,CAACH,EAAT,CAAnB,CAAlC;AAJG,GAAP;AAMD,CAPD;;AASA,eAAehB,UAAU,CAACD,OAAO,CAACa,QAAD,EAAWE,WAAX,CAAP,CAA+BV,oBAA/B,CAAD,CAAzB","sourcesContent":["// const AllStudentsContainer = () => {\r\n//   return (\r\n//     <h1>All Students View</h1>\r\n//   );\r\n// };\r\n\r\n// export default AllStudentsContainer;\r\n\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { fetchAllStudentsThunk, deleteStudentThunk } from \"../../store/thunks\";\r\n\r\nimport AllStudentsView from \"../views/AllStudentsView\";\r\n\r\nclass AllStudentsContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllStudents();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AllStudentsView\r\n          students={this.props.allStudents}\r\n          deleteStudent={this.props.deleteStudent}\r\n          deleteStudents={this.props.deleteStudents}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Map state to props;\r\nconst mapState = (state) => {\r\n  return {\r\n    allStudents: state.allStudents,\r\n  };\r\n};\r\n\r\n// Map dispatch to props;\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\r\n    deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\r\n    deleteStudents: (students) =>\r\n      students.map((student) => dispatch(deleteStudentThunk(student.id))),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));\r\n"]},"metadata":{},"sourceType":"module"}