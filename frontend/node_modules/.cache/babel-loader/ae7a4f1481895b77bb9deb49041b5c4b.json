{"ast":null,"code":"var _jsxFileName = \"E:\\\\Door3Technical\\\\frontend\\\\src\\\\components\\\\containers\\\\NewAuthorContainer.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NewAuthorView from \"../views/NewAuthorView\";\nimport { addAuthorThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewAuthorContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let author = {\n        name: this.state.name,\n        dob: this.state.dob,\n        description: this.state.description\n      };\n      let newAuthor = await this.props.addAuthor(author);\n      this.setState({\n        name: \"\",\n        dob: \"\",\n        description: \"\",\n        redirect: true,\n        redirectId: newAuthor.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      dob: \"\",\n      description: \"\",\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/author/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(NewAuthorView, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    addAuthor: author => dispatch(addAuthorThunk(author))\n  };\n};\n\nexport default connect(null, mapDispatch)(NewAuthorContainer);","map":{"version":3,"sources":["E:/Door3Technical/frontend/src/components/containers/NewAuthorContainer.js"],"names":["Component","connect","Redirect","NewAuthorView","addAuthorThunk","NewAuthorContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","author","state","dob","description","newAuthor","addAuthor","redirect","redirectId","id","componentWillUnmount","render","mapDispatch","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,cAAT,QAA+B,oBAA/B;;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AACzCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWHC,KAAD,IAAW;AACxB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAfkB;;AAAA,SAiBnBC,YAjBmB,GAiBJ,MAAOL,KAAP,IAAiB;AAC9BA,MAAAA,KAAK,CAACM,cAAN;AAEA,UAAIC,MAAM,GAAG;AACXJ,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADN;AAEXM,QAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAFL;AAGXC,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE;AAHb,OAAb;AAMA,UAAIC,SAAS,GAAG,MAAM,KAAKb,KAAL,CAAWc,SAAX,CAAqBL,MAArB,CAAtB;AAEA,WAAKN,QAAL,CAAc;AACZE,QAAAA,IAAI,EAAE,EADM;AAEZM,QAAAA,GAAG,EAAE,EAFO;AAGZC,QAAAA,WAAW,EAAE,EAHD;AAIZG,QAAAA,QAAQ,EAAE,IAJE;AAKZC,QAAAA,UAAU,EAAEH,SAAS,CAACI;AALV,OAAd;AAOD,KAnCkB;;AAEjB,SAAKP,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXM,MAAAA,GAAG,EAAE,EAFM;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXG,MAAAA,QAAQ,EAAE,KAJC;AAKXC,MAAAA,UAAU,EAAE;AALD,KAAb;AAOD;;AA4BDE,EAAAA,oBAAoB,GAAG;AACrB,SAAKf,QAAL,CAAc;AAAEY,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAd;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKT,KAAL,CAAWK,QAAf,EAAyB;AACvB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAG,WAAU,KAAKL,KAAL,CAAWM,UAAW;AAA/C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE,QAAC,aAAD;AACE,MAAA,YAAY,EAAE,KAAKf,YADrB;AAEE,MAAA,YAAY,EAAE,KAAKM;AAFrB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApDwC;;AAuD3C,MAAMa,WAAW,GAAIC,QAAD,IAAc;AAChC,SAAO;AACLP,IAAAA,SAAS,EAAGL,MAAD,IAAYY,QAAQ,CAACxB,cAAc,CAACY,MAAD,CAAf;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAAC,IAAD,EAAO0B,WAAP,CAAP,CAA2BtB,kBAA3B,CAAf","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport NewAuthorView from \"../views/NewAuthorView\";\r\nimport { addAuthorThunk } from \"../../store/thunks\";\r\n\r\nclass NewAuthorContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      dob: \"\",\r\n      description: \"\",\r\n      redirect: false,\r\n      redirectId: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let author = {\r\n      name: this.state.name,\r\n      dob: this.state.dob,\r\n      description: this.state.description,\r\n    };\r\n\r\n    let newAuthor = await this.props.addAuthor(author);\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      dob: \"\",\r\n      description: \"\",\r\n      redirect: true,\r\n      redirectId: newAuthor.id,\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.setState({ redirect: false, redirectId: null });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={`/author/${this.state.redirectId}`} />;\r\n    }\r\n    return (\r\n      <NewAuthorView\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    addAuthor: (author) => dispatch(addAuthorThunk(author)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatch)(NewAuthorContainer);\r\n"]},"metadata":{},"sourceType":"module"}