{"ast":null,"code":"import * as ac from './actions/actionCreators';\n\nconst axios = require('axios'); // THUNKS\n//All campuses\n\n\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`/api/campuses`);\n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single campus\n\nexport const fetchCampusThunk = id => async dispatch => {\n  // thunk creator would not an be async function \n  // if using Promise.then:\n  // return axios\n  //   .get(`/api/campuses/${id}`)\n  //   .then((res) => res.data)\n  //   .then((campus) => dispatch(ac.fetchCampus(campus)))\n  //   .catch((err) => console.log(err));\n  try {\n    let res = await axios.get(`/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n}; //All students\n\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  try {\n    let res = await axios.get(`/api/students`);\n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addStudentThunk = student => async dispatch => {\n  try {\n    let res = await axios.post(`/api/students`, student);\n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteStudentThunk = studentId => async dispatch => {\n  try {\n    await axios.delete(`/api/students/${studentId}`); //delete succesful so change state with dispatch\n\n    dispatch(ac.deleteStudent(studentId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editStudentThunk = student => async dispatch => {\n  try {\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\n    dispatch(ac.editStudent(updatedStudent));\n  } catch (err) {\n    console.error(err);\n  }\n}; //Single student\n\nexport const fetchStudentThunk = id => async dispatch => {\n  try {\n    let res = await axios.get(`/api/students/${id}`);\n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["E:/PracWebDev/FinalProject/frontend/FinalProject-FrontEnd/src/store/thunks.js"],"names":["ac","axios","require","fetchAllCampusesThunk","dispatch","res","get","fetchAllCampuses","data","err","console","error","fetchCampusThunk","id","fetchCampus","fetchAllStudentsThunk","fetchAllStudents","addStudentThunk","student","post","addStudent","deleteStudentThunk","studentId","delete","deleteStudent","editStudentThunk","updatedStudent","put","editStudent","fetchStudentThunk","fetchStudent"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,0BAApB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AAEA;;;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7D,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,eAAX,CAAhB;AACAF,IAAAA,QAAQ,CAACJ,EAAE,CAACO,gBAAH,CAAoBF,GAAG,CAACG,IAAxB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAMG,gBAAgB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,iBAAgBO,EAAG,EAA9B,CAAhB;AACAT,IAAAA,QAAQ,CAACJ,EAAE,CAACc,WAAH,CAAeT,GAAG,CAACG,IAAnB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMM,qBAAqB,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAC7D,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,eAAX,CAAhB;AACAF,IAAAA,QAAQ,CAACJ,EAAE,CAACgB,gBAAH,CAAoBX,GAAG,CAACG,IAAxB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM;AASP,OAAO,MAAMQ,eAAe,GAAIC,OAAD,IAAa,MAAOd,QAAP,IAAoB;AAC9D,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACkB,IAAN,CAAY,eAAZ,EAA4BD,OAA5B,CAAhB;AACAd,IAAAA,QAAQ,CAACJ,EAAE,CAACoB,UAAH,CAAcf,GAAG,CAACG,IAAlB,CAAD,CAAR;AACA,WAAOH,GAAG,CAACG,IAAX;AACD,GAJD,CAIE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAMY,kBAAkB,GAAGC,SAAS,IAAI,MAAMlB,QAAN,IAAkB;AAC/D,MAAI;AACF,UAAMH,KAAK,CAACsB,MAAN,CAAc,iBAAgBD,SAAU,EAAxC,CAAN,CADE,CAEF;;AACAlB,IAAAA,QAAQ,CAACJ,EAAE,CAACwB,aAAH,CAAiBF,SAAjB,CAAD,CAAR;AACD,GAJD,CAIE,OAAMb,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CARM;AAUP,OAAO,MAAMgB,gBAAgB,GAAGP,OAAO,IAAI,MAAMd,QAAN,IAAkB;AAC3D,MAAI;AACF,QAAIsB,cAAc,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,iBAAgBT,OAAO,CAACL,EAAG,EAAtC,EAAyCK,OAAzC,CAA3B;AACAd,IAAAA,QAAQ,CAACJ,EAAE,CAAC4B,WAAH,CAAeF,cAAf,CAAD,CAAR;AACD,GAHD,CAGE,OAAMjB,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,MAAMoB,iBAAiB,GAAGhB,EAAE,IAAI,MAAMT,QAAN,IAAkB;AACvD,MAAI;AACF,QAAIC,GAAG,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,iBAAgBO,EAAG,EAA9B,CAAhB;AACAT,IAAAA,QAAQ,CAACJ,EAAE,CAAC8B,YAAH,CAAgBzB,GAAG,CAACG,IAApB,CAAD,CAAR;AACD,GAHD,CAGE,OAAMC,GAAN,EAAW;AACXC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,CAPM","sourcesContent":["import * as ac from './actions/actionCreators';\r\nconst axios = require('axios');\r\n\r\n// THUNKS\r\n\r\n//All campuses\r\nexport const fetchAllCampusesThunk = () => async (dispatch) => {\r\n  try {\r\n    let res = await axios.get(`/api/campuses`);\r\n    dispatch(ac.fetchAllCampuses(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//Single campus\r\nexport const fetchCampusThunk = (id) => async (dispatch) => {\r\n  // thunk creator would not an be async function \r\n  // if using Promise.then:\r\n  // return axios\r\n  //   .get(`/api/campuses/${id}`)\r\n  //   .then((res) => res.data)\r\n  //   .then((campus) => dispatch(ac.fetchCampus(campus)))\r\n  //   .catch((err) => console.log(err));\r\n  try {\r\n    let res = await axios.get(`/api/campuses/${id}`);\r\n    dispatch(ac.fetchCampus(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//All students\r\nexport const fetchAllStudentsThunk = () => async (dispatch) => {\r\n  try {\r\n    let res = await axios.get(`/api/students`);\r\n    dispatch(ac.fetchAllStudents(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const addStudentThunk = (student) => async (dispatch) => {\r\n  try {\r\n    let res = await axios.post(`/api/students`, student);\r\n    dispatch(ac.addStudent(res.data));\r\n    return res.data;\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const deleteStudentThunk = studentId => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/students/${studentId}`);\r\n    //delete succesful so change state with dispatch\r\n    dispatch(ac.deleteStudent(studentId));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const editStudentThunk = student => async dispatch => {\r\n  try {\r\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\r\n    dispatch(ac.editStudent(updatedStudent));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n//Single student\r\nexport const fetchStudentThunk = id => async dispatch => {\r\n  try {\r\n    let res = await axios.get(`/api/students/${id}`);\r\n    dispatch(ac.fetchStudent(res.data));\r\n  } catch(err) {\r\n    console.error(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}